// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuario {
  id         Int     @id @default(autoincrement())
  nombre     String
  email      String  @unique
  password   String
  telefono   String?
  imagen     String?

  prestamos Prestamo[]
  usuario_rol Usuario_rol[]
}

model Libro {
  id                  Int      @id @default(autoincrement())
  titulo              String   @unique
  fecha_publicacion   DateTime
  genero              String
  resumen             String?
  autor               String
  numero_paginas      Int?
  numero_libros       Int
  disponible          Boolean @default(true)

  prestamos Prestamo[]
}

model Prestamo {
  id                  Int      @id @default(autoincrement())
  usuario_id          Int
  libro_id            Int
  fecha_prestamo      DateTime
  fecha_devolucion    DateTime
  estado              String

  usuario Usuario? @relation(fields: [usuario_id], references: [id], onDelete: Cascade)
  libro   Libro?    @relation(fields: [libro_id], references: [id], onDelete: Cascade)
}

model Rol {
  id              Int @id @default(autoincrement())
  name            String

  usuario_rol Usuario_rol[]
}

model Usuario_rol {
  id              Int @id @default(autoincrement())
  usuario_id      Int 
  rol_id          Int

  usuario Usuario? @relation(fields: [usuario_id], references: [id], onDelete: Cascade)
  rol   Rol?    @relation(fields: [rol_id], references: [id], onDelete: Cascade)
}
